DELIMITER $$
  CREATE PROCEDURE MEDICAMENTO ( COD_MEDICAMENTO INT , QTD_ESTOQUE INT)
BEGIN
    DECLARE CONTADOR INT(11);

    SELECT count(*) INTO CONTADOR FROM MEDICAMENTO WHERE COD_MEDICAMENTO = COD_MEDICAMENTO;

    IF contador > 0 THEN
        UPDATE MEDICAMENTO SET QTD_ESTOQUE = (QTD_ESTOQUE + 1)
        WHERE COD_MEDICAMENTO = COD_MEDICAMENTO;
    ELSE
        INSERT INTO MEDICAMENTO(COD_MEDICAMENTO, QTD_ESTOQUE) VALUES (COD_MEDICAMENTO, QTD_ESTOQUE);
    END IF;
END $$

DELIMITER $$
CREATE PROCEDURE INSERCAO_MED(
    CODIGO INT,
    NOME VARCHAR(150),
    TIPO VARCHAR(1))
BEGIN
  INSERT INTO MEDICAMENTO(COD_MEDICAMENTO, NOM_MEDICAMENTO, IDF_TIPO_MEDICAMENTO)
  VALUES(CODIGO, NOME, TIPO);
 END $$   
 
CALL INSERCAO_MED (2,"SINGULAIR","R");

DELIMITER $$
CREATE PROCEDURE MEDICAMENTO(
    CODIGO INT,
    ESTOQUE INT)
BEGIN
  UPDATE MEDICAMENTO
  SET COD_MEDICAMENTO = CODIGO, QTD_ESTOQUE = ESTOQUE
  WHERE COD_MEDICAMENTO = CODIGO;
 END $$   

CALL MEDICAMENTO (2, 2)








  DELIMITER $$

 CREATE DEFINER=`root`@`localhost`

  PROCEDURE PRC_MUDA_SITUACAO_SALA(P_NUM_SALA INT, P_SITUACAO VARCHAR(1))

 BEGIN

   DECLARE V_ERROR BIGINT;

  DECLARE V_MESSAGE TEXT;

  DECLARE CONTINUE HANDLER FOR SQLWARNING BEGIN END;

   

   

   IF P_SITUACAO NOT IN ('D','O','R','I') THEN 

      SET V_ERROR = 10000;

      SET V_MESSAGE = 'SITUAÇÃO DA SALA INCORRETA!';

     CALL RAISE_MESSAGE_ERROR(V_ERROR,V_MESSAGE);

    ELSE

       UPDATE SALA SET

             IDF_SITUACAO = P_SITUACAO

        WHERE NUM_SALA = P_NUM_SALA;

    END IF;

 END $$

 DELIMITER ;




  DELIMITER $$

 CREATE DEFINER=`root`@`localhost`

  PROCEDURE PRC_MUDA_SITUACAO_SALA(P_NUM_SALA INT, P_SITUACAO VARCHAR(100))

 BEGIN

   DECLARE V_ERROR BIGINT;

  DECLARE V_MESSAGE TEXT;

  DECLARE CONTINUE HANDLER FOR SQLWARNING BEGIN END;

   

   

   IF P_SITUACAO NOT IN ('D','O','R','I') THEN 

      SET V_ERROR = 10000;

      SET V_MESSAGE = 'SITUAÇÃO DA SALA INCORRETA!';

     CALL RAISE_MESSAGE_ERROR(V_ERROR,V_MESSAGE);

    ELSE
    CREATE TEMPORARY TABLE SALA_AGENDAMENTO AS (SELECT * FROM SALA);
    ALTER TABLE SALA_AGENDAMENTO
    MODIFY IDF_SITUACAO VARCHAR(100);
       UPDATE SALA_AGENDAMENTO SET
			IDF_SITUACAO = P_SITUACAO,
            IDF_SITUACAO = REPLACE(IDF_SITUACAO,'R', 'RESERVADA'),
            IDF_SITUACAO = REPLACE(IDF_SITUACAO,'I' , 'RESERVADA'),
            IDF_SITUACAO = REPLACE(IDF_SITUACAO,'D' , 'RESERVADA'),
			IDF_SITUACAO = REPLACE(IDF_SITUACAO,'O' , 'RESERVADA')
        WHERE NUM_SALA = P_NUM_SALA;

    END IF;

 END $$

 DELIMITER ;





DELIMITER $$

 CREATE DEFINER=`root`@`localhost`

  PROCEDURE RETIRAR_MEDICAMENTO(P_NUM_RECEITA INT, P_PRESCRICAO VARCHAR(100))
 BEGIN
   DECLARE V_ERROR BIGINT;
  DECLARE V_MESSAGE TEXT;
  DECLARE CONTINUE HANDLER FOR SQLWARNING BEGIN END;
  
   IF P_PRESCRICAO = 'RETIRADO' THEN
    UPDATE PRESCRICAO SET
		   IDF_RETIROU_MEDICAMENTO = 'S';
    UPDATE MEDICAMENTO SET
            QTD_ESTOQUE = QTD_ESTOQUE - 1
        WHERE COD_MEDICAMENTO = P_NUM_RECEITA;
   
    ELSE
   
      SET V_ERROR = 10000;

      SET V_MESSAGE = 'MEDICAMENTO NÃO RETIRADO!';

     CALL RAISE_MESSAGE_ERROR(V_ERROR,V_MESSAGE);
      

END IF;
 END $$
 DELIMITER ;
 



DELIMITER $$
SET @@SESSION.max_sp_recursion_depth=25; $$
 CREATE DEFINER=`root`@`localhost`

 PROCEDURE PRESCRICAO_RETIRADA(P_NUM_RECEITA INT, P_PRESCRICAO VARCHAR(100))

 BEGIN

    DECLARE V_ERROR BIGINT;

   DECLARE V_MESSAGE TEXT;

   DECLARE CONTINUE HANDLER FOR SQLWARNING BEGIN END;

  

   

   IF P_PRESCRICAO NOT IN ('S', 'RETIRADO') THEN 

        SET V_ERROR = 10000;

      SET V_MESSAGE = 'MEDICAMENTO NÃO RETIRADO!';

     CALL RAISE_MESSAGE_ERROR(V_ERROR,V_MESSAGE);
      

   ELSE

      
  
    UPDATE MEDICAMENTO SET
            QTD_ESTOQUE = QTD_ESTOQUE - 1
        WHERE COD_MEDICAMENTO = P_NUM_RECEITA;

   END IF;

 END $$

 DELIMITER ;
