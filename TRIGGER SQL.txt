 DELIMITER $$
CREATE TRIGGER RESERVA_SALA
BEFORE UPDATE
ON SALA FOR EACH ROW
BEGIN
CALL PRC_MUDA_SAÇA(2, 'R');

END $$


RESERVA_SALA DELIMITER $$

CREATE TRIGGER RESERVA_SALA
BEFORE UPDATE
ON CONSULTA FOR EACH ROW
BEGIN
IF NEW.DATA_AGENDAMENTO <> OLD.DATA_AGENDAMENTO THEN
CALL PRC_MUDA_SALA(2, 'R');

END IF;
END; $$







DELIMITER $$

 CREATE DEFINER=`root`@`localhost`

 PROCEDURE PRC_MUDA_SITUACAO_SALA(P_NUM_SALA INT, P_SITUACAO VARCHAR(1))

 BEGIN

    DECLARE V_ERROR BIGINT;

   DECLARE V_MESSAGE TEXT;

   DECLARE CONTINUE HANDLER FOR SQLWARNING BEGIN END;

  

   

   IF P_SITUACAO NOT IN ('D','O','R','I') THEN 

      SET V_ERROR = 10000;

      SET V_MESSAGE = 'SITUAÇÃO DA SALA INCORRETA!';

      CALL RAISE_MESSAGE_ERROR(V_ERROR,V_MESSAGE);

   ELSE

       UPDATE SALA SET

             IDF_SITUACAO = P_SITUACAO
       WHERE NUM_SALA = P_NUM_SALA;

   END IF;

 END $$

 DELIMITER ;



 DELIMITER $$

  CREATE DEFINER=`root`@`localhost`
          TRIGGER VERIFICACAO BEFORE UPDATE
         ON MEDICAMENTO FOR EACH ROW                                   
    BEGIN
      
	IF NEW.QTD_ESTOQUE <=> 0 THEN
	
          CALL RAISE_MESSAGE_ERROR(10000,'SEM ESSE MEDICAMENTO NO ESTOQUE, ESCOLHA OUTRO!');

  END IF;
  END $$
  DELIMITER ;




com JOIN 
DELIMITER $$;
CREATE TRIGGER baixaDeEstoque
AFTER UPDATE ON pedidos
FOR EACH ROW
if NEW.status <=> OLD.status AND NEW.status = 'pago' 
BEGIN
   UPDATE estoque
   INNER JOIN itens ON estoque.id = itens.tamanho
   SET quantidade = quantidade-1
   WHERE itens.pedido = NEW.id;
END$$